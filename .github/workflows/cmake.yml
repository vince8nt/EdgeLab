name: CMake Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y cmake g++

    - name: Configure CMake
      run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release

    - name: Build
      run: cmake --build build --config Release 2>&1 | tee build/build.log

    - name: Check for warnings
      run: |
        # Fail if any compiler warnings are found in the build log
        if grep -i "warning:" build/build.log; then
          echo "Build contains warnings!"
          exit 1
        fi

    - name: Run iteration
      run: |
        # Check that iteration is equivalent to indexing for all graph type combinations
        ./build/iteration --graph-type u --vertex-type uw --edge-type uw --scale 8 --degree 8 --gen-type er
        ./build/iteration --graph-type d --vertex-type uw --edge-type uw --scale 8 --degree 8 --gen-type er
        ./build/iteration --graph-type u --vertex-type w --edge-type uw --scale 8 --degree 8 --gen-type er
        ./build/iteration --graph-type d --vertex-type w --edge-type uw --scale 8 --degree 8 --gen-type er
        ./build/iteration --graph-type u --vertex-type uw --edge-type w --scale 8 --degree 8 --gen-type er
        ./build/iteration --graph-type d --vertex-type uw --edge-type w --scale 8 --degree 8 --gen-type er
        ./build/iteration --graph-type u --vertex-type w --edge-type w --scale 8 --degree 8 --gen-type er
        ./build/iteration --graph-type d --vertex-type w --edge-type w --scale 8 --degree 8 --gen-type er

    - name: Run validate_graph
      run: |
        # Test Erdős-Rényi graphs
        ./build/validate_graph --graph-type u --edge-type uw --scale 8 --degree 8 --gen-type er
        ./build/validate_graph --graph-type d --edge-type uw --scale 8 --degree 8 --gen-type er
        ./build/validate_graph --graph-type u --edge-type w --scale 8 --degree 8 --gen-type er
        ./build/validate_graph --graph-type d --edge-type w --scale 8 --degree 8 --gen-type er
        
        # Test Watts-Strogatz graphs
        ./build/validate_graph --graph-type u --edge-type uw --scale 8 --degree 8 --gen-type ws
        ./build/validate_graph --graph-type d --edge-type uw --scale 8 --degree 8 --gen-type ws
        ./build/validate_graph --graph-type u --edge-type w --scale 8 --degree 8 --gen-type ws
        ./build/validate_graph --graph-type d --edge-type w --scale 8 --degree 8 --gen-type ws
        
        # Test Barabási-Albert graphs
        ./build/validate_graph --graph-type u --edge-type uw --scale 8 --degree 8 --gen-type ba
        ./build/validate_graph --graph-type d --edge-type uw --scale 8 --degree 8 --gen-type ba
        ./build/validate_graph --graph-type u --edge-type w --scale 8 --degree 8 --gen-type ba
        ./build/validate_graph --graph-type d --edge-type w --scale 8 --degree 8 --gen-type ba

    - name: Run dense packing check
      run: |
        ./build/packing

    - name: Run triangle counting tests
      run: |
        ./build/triangle_counting_test

    - name: Run breadth-first search tests
      run: |
        ./build/breadth_first_search_test

    - name: Run load/save tests
      run: |
        # Test graph save/load functionality for all combinations of:
        # - Graph types: directed/undirected
        # - Vertex types: weighted/unweighted  
        # - Edge types: weighted/unweighted
        # - File formats: EL (text) and CG (binary)
        python3 ./test/test_load_save.py